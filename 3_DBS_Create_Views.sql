--USE THE DATABASE
USE APU_SEPL
GO

---==============================
--- STEP 03: VIEW CREATION
---==============================

---============================================================================================
--- MEMBER TABLE VIEWS (OWN_MEMBER_INFO_VIEW & ALL_MEMBER_INFO_VIEW is at another SQL file)
---============================================================================================

/** VIEW FOR EXPIRED MEMBERS **/
CREATE OR ALTER VIEW DBO.EXPIRE_MEMBER_VIEW
AS
SELECT *
FROM [DBO].[MEMBER]
WHERE MEM_STATUS = 'EXPIRED'

SELECT * FROM EXPIRE_MEMBER_VIEW


/** VIEW FOR ACTIVE MEMBERS **/
CREATE OR ALTER VIEW DBO.ACTIVE_MEMBER_VIEW
AS
SELECT *
FROM [DBO].[MEMBER]
WHERE MEM_STATUS = 'ACTIVE'

SELECT * FROM ACTIVE_MEMBER_VIEW


---===========================================
--- TRANSACTION TABLE VIEWS
---===========================================

/** VIEW FOR MEMBER'S OWN TRANSACTION DETAILS **/
CREATE OR ALTER VIEW DBO.OWN_TRANS_INFO_VIEW WITH SCHEMABINDING 
AS
SELECT 
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, 
  EQUIP.EQ_NAME, EQUIP.EQ_PPU, EQ.TRANS_QUANT_PURCHASED, 
  TRANS.TRANS_DATE, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, 
  CAT.CAT_DISCOUNT_NAME,
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before discount)],
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE)
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before tax)],
  CAST(
      SUM(
        CASE 
            WHEN EQUIP.EQ_COUNTRY <> 'Malaysia' THEN (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE) * 1.1) 
            ELSE (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE))
        END
	  ) AS DECIMAL(6, 2)
    ) AS [TOTAL_AMOUNT_SPENT (incl. tax)]
FROM 
  [DBO].[TRANSACTION] TRANS 
  INNER JOIN [DBO].[MEMBER] MEM ON TRANS.MEM_ID = MEM.MEM_ID 
  INNER JOIN [DBO].[EQ_TRANS] EQ ON EQ.TRANS_ID = TRANS.TRANS_ID 
  INNER JOIN [DBO].[EQUIPMENT] EQUIP ON EQ.EQ_ID = EQUIP.EQ_ID 
  LEFT JOIN [DBO].[CATEGORY] CAT ON  EQUIP.CAT_ID = CAT.CAT_ID
GROUP BY 
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, TRANS.TRANS_DATE, EQUIP.EQ_NAME, EQUIP.EQ_PPU, 
  EQ.TRANS_QUANT_PURCHASED, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, CAT.CAT_DISCOUNT_NAME

USE APU_SEPL;
EXECUTE AS USER = '50003'
SELECT * FROM OWN_TRANS_INFO_VIEW

revert

/** VIEW FOR EXPENSIVE TRANSACTIONS **/
CREATE OR ALTER VIEW DBO.EXPENSIVE_TRANS_VIEW
AS
SELECT TOP 5
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, 
  EQUIP.EQ_NAME, EQUIP.EQ_PPU, EQ.TRANS_QUANT_PURCHASED, 
  TRANS.TRANS_DATE, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, 
  CAT.CAT_DISCOUNT_NAME,
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before discount)],
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE)
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before tax)],
  CAST(
      SUM(
        CASE 
            WHEN EQUIP.EQ_COUNTRY <> 'Malaysia' THEN (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE) * 1.1) 
            ELSE (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE))
        END
	  ) AS DECIMAL(6, 2)
    ) AS [TOTAL_AMOUNT_SPENT (incl. tax)]
FROM 
  [DBO].[TRANSACTION] TRANS 
  INNER JOIN [DBO].[MEMBER] MEM ON TRANS.MEM_ID = MEM.MEM_ID 
  INNER JOIN EQ_TRANS EQ ON EQ.TRANS_ID = TRANS.TRANS_ID 
  INNER JOIN EQUIPMENT EQUIP ON EQ.EQ_ID = EQUIP.EQ_ID 
  LEFT JOIN CATEGORY CAT ON  EQUIP.CAT_ID = CAT.CAT_ID
GROUP BY 
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, TRANS.TRANS_DATE, EQUIP.EQ_NAME, EQUIP.EQ_PPU, 
  EQ.TRANS_QUANT_PURCHASED, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, CAT.CAT_DISCOUNT_NAME
ORDER BY [TOTAL_AMOUNT_SPENT (incl. tax)] DESC

SELECT * FROM EXPENSIVE_TRANS_VIEW

select USER_NAME()
revert

/** VIEW FOR EXPENSIVE TRANSACTIONS WITH SPECIFIC AMOUNT (GREATER THAN 1000) **/
CREATE OR ALTER VIEW DBO.TRANS_EXCEED_1000_VIEW
AS
SELECT
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, 
  EQUIP.EQ_NAME, EQUIP.EQ_PPU, EQ.TRANS_QUANT_PURCHASED, 
  TRANS.TRANS_DATE, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, 
  CAT.CAT_DISCOUNT_NAME,
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before discount)],
  CAST(
    SUM(
        EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE)
    ) AS DECIMAL(6, 2)
  ) AS [TOTAL_AMOUNT (before tax)],
  CAST(
      SUM(
        CASE 
            WHEN EQUIP.EQ_COUNTRY <> 'Malaysia' THEN (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE) * 1.1) 
            ELSE (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE))
        END
	  ) AS DECIMAL(6, 2)
    ) AS [TOTAL_AMOUNT_SPENT (incl. tax)]
FROM 
  [DBO].[TRANSACTION] TRANS 
  INNER JOIN [DBO].[MEMBER] MEM ON TRANS.MEM_ID = MEM.MEM_ID 
  INNER JOIN EQ_TRANS EQ ON EQ.TRANS_ID = TRANS.TRANS_ID 
  INNER JOIN EQUIPMENT EQUIP ON EQ.EQ_ID = EQUIP.EQ_ID 
  LEFT JOIN CATEGORY CAT ON  EQUIP.CAT_ID = CAT.CAT_ID
GROUP BY 
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, TRANS.TRANS_DATE, EQUIP.EQ_NAME, EQUIP.EQ_PPU, 
  EQ.TRANS_QUANT_PURCHASED, EQUIP.EQ_COUNTRY, CAT.CAT_NAME, CAT.CAT_DISCOUNT_NAME
HAVING SUM(
    CASE 
        WHEN EQUIP.EQ_COUNTRY <> 'Malaysia' THEN (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE) * 1.1) 
        ELSE (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE))
    END
	  ) > 1000
--ORDER BY [TOTAL_AMOUNT_SPENT (incl. tax)] DESC;

SELECT * FROM TRANS_EXCEED_1000_VIEW
ORDER BY [TOTAL_AMOUNT_SPENT (incl. tax)] DESC


/** VIEW FOR TOP 15 RECENT TRANSACTIONS **/
CREATE OR ALTER VIEW DBO.RECENT_TRANS
AS
SELECT TOP 15
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, 
  EQUIP.EQ_NAME, EQ.TRANS_QUANT_PURCHASED, 
  TRANS.TRANS_DATE,
  CAST(
      SUM(
        CASE 
            WHEN EQUIP.EQ_COUNTRY <> 'Malaysia' THEN (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE) * 1.1) 
            ELSE (EQUIP.EQ_PPU * EQ.TRANS_QUANT_PURCHASED * (1 - CAT.CAT_DISCOUNT_VALUE))
        END
	  ) AS DECIMAL(6, 2)
    ) AS [TOTAL_AMOUNT_SPENT (incl. tax)]
FROM 
  [DBO].[TRANSACTION] TRANS 
  INNER JOIN [DBO].[MEMBER] MEM ON TRANS.MEM_ID = MEM.MEM_ID 
  INNER JOIN EQ_TRANS EQ ON EQ.TRANS_ID = TRANS.TRANS_ID 
  INNER JOIN EQUIPMENT EQUIP ON EQ.EQ_ID = EQUIP.EQ_ID 
  INNER JOIN CATEGORY CAT ON CAT.CAT_ID = EQUIP.CAT_ID
GROUP BY 
  MEM.[MEM_ID], MEM.[MEM_NAME], TRANS.TRANS_ID, TRANS.TRANS_DATE, EQUIP.EQ_NAME,
  EQ.TRANS_QUANT_PURCHASED
--ORDER BY TRANS.TRANS_DATE DESC

SELECT * FROM RECENT_TRANS
ORDER BY TRANS_DATE DESC


---===========================================
--- CATEGORY TABLE VIEWS
---===========================================

/** VIEW FOR AVAILABLE CATEGORY DISCOUNT **/
CREATE OR ALTER VIEW DBO.AVAILABLE_CAT_DISCOUNT_VIEW
AS
SELECT * 
FROM CATEGORY
WHERE [CAT_DISCOUNT_NAME] IS NOT NULL

SELECT * FROM AVAILABLE_CAT_DISCOUNT_VIEW


/** VIEW FOR CATEGORY WITH COUNT **/
CREATE OR ALTER VIEW DBO.CATEGORIES_WITH_COUNT_VIEW 
AS
SELECT CAT.CAT_ID, CAT.CAT_NAME, COUNT(EQUIP.EQ_ID) AS EQUIPMENT_COUNT
FROM [DBO].[EQUIPMENT] EQUIP
LEFT JOIN CATEGORY CAT
ON CAT.CAT_ID = EQUIP.CAT_ID
GROUP BY  CAT.CAT_ID, CAT.CAT_NAME

SELECT * FROM CATEGORIES_WITH_COUNT_VIEW 

---===========================================
--- EQUIPMENT TABLE VIEWS
---===========================================

/** VIEW FOR EQUIPMENT THAT IS LOW IN QUANTITY (MIN THRESHOLD OF 10) **/
CREATE OR ALTER VIEW DBO.CHECK_LESS_EQPMENT_VIEW
AS
SELECT * 
FROM [DBO].[EQUIPMENT]
WHERE EQ_QUANTITY <= 10

SELECT * FROM CHECK_LESS_EQPMENT_VIEW


/** VIEW FOR EQUIPMENT THAT IS HIGH IN QUANTITY (MAX THRESHOLD OF 30) **/
CREATE OR ALTER VIEW DBO.CHECK_MORE_EQPMENT_VIEW
AS
SELECT * 
FROM [DBO].[EQUIPMENT]
WHERE EQ_QUANTITY > 30

SELECT * FROM CHECK_MORE_EQPMENT_VIEW


/** VIEW FOR EQUIPMENT WITH CATEGORY DETAILS **/
CREATE OR ALTER VIEW DBO.EQPMENT_WITH_CAT_VIEW
AS
SELECT 
EQUIP.EQ_ID, EQUIP.EQ_NAME, EQUIP.EQ_PPU, EQUIP.EQ_QUANTITY,
CAT.CAT_NAME, CAT.CAT_DISCOUNT_NAME
FROM [DBO].[EQUIPMENT] EQUIP
LEFT JOIN CATEGORY CAT
ON CAT.CAT_ID = EQUIP.CAT_ID